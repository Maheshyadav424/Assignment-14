2.Write a JavaScript program to
a) Calculate grades on basis of marks
>90 = A
>80 = B
>70 = C
>60 = D
>50 = E
else = F

b) Map the grades of each student
c) Group students according to the grades they have received and display.




Sample Input:

let students = [
{ name: "John", marks: “92” },
{ name: "Oliver", marks: “85” },
{ name: "Michael", marks: “79” },
{ name: "Dwight", marks: “95”},
{ name: "Oscar", marks: “64” },
{ name: "Kevin", marks: “48” },
];

Output:
{
'A': [ { name: "John", grade: “A” },
{ name: "Dwight", grade: “A” } ],
'B': [ { name: "Oliver", grade: “B” } ],
'C': [ { name: "Michael", grade: “C” } ],
'D': [ { name: "Oscar", grade: “D” } ],
'E': [ ],
'F': [ { name: "Kevin", grade: “F” } ],
}

ANS:

let students = [
  { name: "John", marks: "92" },
  { name: "Oliver", marks: "85" },
  { name: "Michael", marks: "79" },
  { name: "Dwight", marks: "95" },
  { name: "Oscar", marks: "64" },
  { name: "Kevin", marks: "48" },
];

// Function to calculate grades based on marks
function calculateGrade(marks) {
  if (marks > 90) return 'A';
  else if (marks > 80) return 'B';
  else if (marks > 70) return 'C';
  else if (marks > 60) return 'D';
  else if (marks > 50) return 'E';
  else return 'F';
}

// Calculate grades and map grades to each student
const studentGrades = students.map(student => ({
  name: student.name,
  grade: calculateGrade(parseInt(student.marks))
}));

// Group students according to grades
const groupedStudents = studentGrades.reduce((acc, student) => {
  if (!acc[student.grade]) {
    acc[student.grade] = [];
  }
  acc[student.grade].push({ name: student.name, grade: student.grade });
  return acc;
}, {});

// Display the grouped students
console.log(groupedStudents);
Copy and paste this code into a JavaScript environment (such as a browser console) to run the program. It will process the sample input and display the output in the format you provided.





